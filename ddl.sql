-- Log schema
create table public.log
(
    id    bigint generated by default as identity
          constraint log_pk
          primary key,
    level integer not null,
    text  text not null,
    time  timestamp with time zone not null
);

alter table public.log
    owner to postgres;


-- Company schema
create table public.company
(
    id  bigint generated by default as identity
        constraint company_pk
        primary key,
    company_name    varchar(30) not null,
    business_email  varchar(64) not null,
    interface_color varchar(10) not null,
    is_active       boolean     not null
);

alter table public.company
    owner to postgres;


-- Point schema
create table public.point
(
    id  bigint generated by default as identity
        constraint point_pk
        primary key,
    address varchar(50) not null,
    company_id  bigint not null
                constraint point_company_id_fk_company_id
                references public.company
                deferrable initially deferred,
    book_table boolean not null,
    name varchar(50) not null,
    online_order boolean not null
);

alter table public.point
    owner to postgres;

create index point_company_id_index
    on public.point (company_id);


-- Admin_account schema
create table public.admin_account
(
    id  bigint generated by default as identity
        constraint admin_account_pk
        primary key,
    is_moderator boolean not null,
    company_id bigint not null
               constraint admin_account_company_id_fk_company_id
               references public.company
               deferrable initially deferred,
    point_id bigint
             constraint admin_account_point_id_fk_point_id
             references public.point
             deferrable initially deferred
);

alter table public.admin_account
    owner to postgres;

create index admin_account_company_id_index
    on public.admin_account (company_id);

create index admin_account_point_id_index
    on public.admin_account (point_id);


-- User schema
create table public.user_
(
    id  bigint generated by default as identity
        constraint user_pk
        primary key,
    password  varchar(128) not null,
    last_login timestamp with time zone,
    username varchar(150) not null
             constraint user_username_key unique,
    is_active boolean not null,
    first_name varchar(20) not null,
    last_name varchar(20) not null,
    email varchar(254) not null
          constraint user_email_key unique,
    date_joined timestamp with time zone not null,
    is_platform_admin boolean not null,
    admin_access_id bigint
                    constraint user_admin_access_id_fk_admin_account_id
                    references public.admin_account
                    deferrable initially deferred
);

alter table public.user_
    owner to postgres;

create index user_username_index
    on public.user_ (username varchar_pattern_ops);

create index user_email_index
    on public.user_ (email varchar_pattern_ops);

create index user_admin_access_id_index
    on public.user_ (admin_access_id);


-- Comments table
create table public.comment
(
    id  bigint generated by default as identity
        constraint comment_pk
        primary key,
    text text not null,
    point_id bigint not null
             constraint comment_point_id_fk_point_id
             references public.point
             deferrable initially deferred,
    user_id  bigint not null
             constraint comment_user_id_fk_user_id
             references public.user_
             deferrable initially deferred,
    time     timestamp with time zone not null
);

alter table public.comment
    owner to postgres;

create index comment_point_id_index
    on public.comment (point_id);

create index comment_user_id_index
    on public.comment (user_id);


-- Rating table
create table public.rating
(
    id  bigint generated by default as identity
        constraint rating_pk
        primary key,
    rating numeric(3, 2) not null,
    point_id bigint not null
             constraint rating_point_id_fk_point_id
             references public.point
             deferrable initially deferred,
    user_id  bigint        not null
             constraint rating_user_id_fk_user_id
             references public.user_
             deferrable initially deferred,
    constraint point_id_user_id_unique
        unique (point_id, user_id)
);

alter table public.rating
    owner to postgres;

create index rating_point_id_index
    on public.rating (point_id);

create index rating_user_id_index
    on public.rating (user_id);


-- Payment_method schema
create table public.payment_method
(
    id  bigint generated by default as identity
        constraint payment_method_pk
        primary key,
    card_number varchar(16) not null,
    user_id bigint not null
            constraint payment_method_user_id_fk_user_id
            references public.user_
            deferrable initially deferred
);

alter table public.payment_method
    owner to postgres;

create index payment_method_user_id_index
    on public.payment_method (user_id);


-- Offer schema
create table public.offer
(
    id  bigint generated by default as identity
        constraint offer_pk
        primary key,
    description varchar(64) not null,
    content text not null,
    created_on  timestamp with time zone not null,
    updated_on  timestamp with time zone not null,
    company_id  bigint not null
                constraint offer_company_id_fk_company_id
                references public.company
                deferrable initially deferred
);

alter table public.offer
    owner to postgres;

create index company_id_index
    on public.offer (company_id);


-- Post schema
create table public.post
(
    id  bigint generated by default as identity
        constraint post_pk
        primary key,
    title  varchar(64) not null
           constraint post_title_unique
           unique,
    slug   varchar(64) not null
           constraint post_slug_unique
           unique,
    content  text not null,
    created_on timestamp with time zone not null,
    updated_on timestamp with time zone not null,
    company_id bigint not null
               constraint post_company_id_fk_company_id
               references public.company
               deferrable initially deferred
);

alter table public.post
    owner to postgres;

create index post_title_index
    on public.post (title varchar_pattern_ops);

create index post_slug_index
    on public.post (slug varchar_pattern_ops);

create index post_company_id_index
    on public.post (company_id);


-- Order schema
create table public.order
(
    id  bigint generated by default as identity
        constraint order_pk
        primary key,
    status  varchar(11) not null,
    time_ordered timestamp with time zone not null,
    total_price  numeric(8, 2)  not null,
    point_id  bigint  not null
              constraint order_point_id_fk_point_id
              references public.point
              deferrable initially deferred,
    user_id  bigint  not null
             constraint order_user_id_fk_user_id
             references public.user_
             deferrable initially deferred
);

alter table public.order
    owner to postgres;

create index order_point_id_index
    on public.order (point_id);

create index order_user_id_index
    on public.order (user_id);


-- Order_audit
create table public.order_audit
(
    id  bigint generated by default as identity
        constraint order_audit_pk
        primary key,
    order_id  bigint not null
              constraint order_audit_order_id_fk_order_id
              references public.order
              deferrable initially deferred,
    old_status varchar(11) not null,
    new_status varchar(11) not null,
    time_ordered timestamp with time zone not null,
    total_price  numeric(8, 2)  not null
);

-- Order_payment schema
create table public.order_payment
(
    id  bigint generated by default as identity
        constraint order_payment_pk
        primary key,
    time_accepted  timestamp with time zone not null,
    order_id  bigint not null
              constraint order_payment_order_id_fk_order_id
              references public.order
              deferrable initially deferred,
    payment_method_id  bigint  not null
                       constraint order_payment_payment_method_id_fk_payment_method_id
                       references public.payment_method
                       deferrable initially deferred
);

alter table public.order_payment
    owner to postgres;

create index order_payment_order_id_index
    on public.order_payment (order_id);

create index order_payment_payment_method_id_index
    on public.order_payment (payment_method_id);


-- Product names
create table public.product_name
(
    id  bigint generated by default as identity
        constraint product_name_pk
        primary key,
    name varchar(32) not null
);

alter table public.product_name
    owner to postgres;


-- Product schema
create table public.product
(
    id  bigint generated by default as identity
        constraint product_pk
        primary key,
    name_id bigint  not null
            constraint product_name_id_fk_product_names_id
            references public.product_name
            deferrable initially deferred,
    bar_code  varchar(12)  not null,
    price  numeric(6, 2) not null,
    loaylty_coeff  numeric(3, 2) not null,
    point_id  bigint        not null
              constraint product_point_id_fk_point_id
              references public.point
              deferrable initially deferred
);

alter table public.product
    owner to postgres;

create index product_point_id_index
    on public.product (point_id);

create index product_name_id_index
    on public.product (name_id);


-- Product_order schema
create table public.product_order
(
    id  bigint generated by default as identity
        constraint product_order_pk
        primary key,
    quantity  integer not null,
    order_id  bigint  not null
              constraint product_order_order_id_fk_order_id
              references public.order
              deferrable initially deferred,
    product_id  bigint not null
                constraint product_order_product_id_fk_product_id
                references public.product
                deferrable initially deferred,
    constraint one_product_per_order
        unique (product_id, order_id)
);

alter table public.product_order
    owner to postgres;

create index product_order_order_id_index
    on public.product_order (order_id);

create index product_order_product_id_index
    on public.product_order (product_id);


-- Auth_group schema
create table public.auth_group
(
    id  integer generated by default as identity
        constraint auth_group_pk
        primary key,
    name varchar(150) not null
         constraint auth_group_name_key
         unique
);

alter table public.auth_group
    owner to postgres;

create index auth_group_name_index
    on public.auth_group (name varchar_pattern_ops);


-- Permission schema
create table public.auth_permission
(
    id  integer generated by default as identity
        constraint auth_permission_pk
        primary key,
    name  varchar(255) not null,
    codename  varchar(100) not null
);

alter table public.auth_permission
    owner to postgres;


-- Brief_comment schema
create table public.brief_comment
(
    id  bigint generated by default as identity
        constraint brief_comment_pk
        primary key,
    comment varchar(50) not null,
    rate real not null
         constraint brief_comment_rate_check
         check ( rate >= -1 and rate <= 1 )
);

alter table public.brief_comment
    owner to postgres;


-- Point_brief_comments schema
create table public.point_brief_comments
(
    updated_on timestamp with time zone not null,
    point_id  bigint not null
              constraint point_brief_comments_points_id_pk primary key
              constraint point_brief_comments_point_id_fk_point_id
                 references public.point
                 deferrable initially deferred
);

alter table public.point_brief_comments
    owner to postgres;


-- User_related_user schema
create table public.user_related_user
(
    id  bigint generated by default as identity
        constraint user_related_user_pk
        primary key,
    rank  integer not null
          constraint user_related_user_rank_check
          check (rank >= 0),
    related_user_id bigint  not null
                    constraint user_related_user_id_fk_user_id
                    references public.user_
                    deferrable initially deferred,
    user_id  bigint  not null
             constraint user_related_user_related_user_id_fk_user_id
             references public.user_
             deferrable initially deferred,
    constraint user_id_related_user_id_rank_unique
        unique (user_id, related_user_id, rank)
);

alter table public.user_related_user
    owner to postgres;

create index user_related_user_user_id_index
    on public.user_related_user (user_id);

create index user_related_user_related_user_id_index
    on public.user_related_user (related_user_id);


-- Point_related_point schema
create table public.point_related_point
(
    id  bigint generated by default as identity
        constraint point_related_point_pk
        primary key,
    rank  integer not null
          constraint point_related_point_rank_check
          check (rank >= 0),
    point_id  bigint not null
              constraint point_related_point_point_id_fk_point_id
              references public.point
              deferrable initially deferred,
    related_point_id bigint not null
                     constraint point_related_point_related_point_id_fk_point_id
                     references public.point
                     deferrable initially deferred,
    constraint point_id_related_point_id_rank_unique
        unique (point_id, related_point_id, rank)
);

alter table public.point_related_point
    owner to postgres;

create index point_related_point_point_id_index
    on public.point_related_point (point_id);

create index point_related_point_related_point_id_index
    on public.point_related_point (related_point_id);


-- Company_related_company schema
create table public.company_related_company
(
    id  bigint generated by default as identity
        constraint company_related_company_pk
        primary key,
    rank  integer not null
          constraint company_related_company_rank_check
          check (rank >= 0),
    company_id  bigint  not null
                constraint company_related_company_company_id_fk_company_id
                references public.company
                deferrable initially deferred,
    related_company_id  bigint  not null
                        constraint company_related_company_related_company_id_fk_company_id
                        references public.company
                        deferrable initially deferred,
    constraint company_id_related_company_id_rank_unique
        unique (company_id, related_company_id, rank)
);

alter table public.company_related_company
    owner to postgres;

create index company_related_company_company_id_index
    on public.company_related_company (company_id);

create index company_related_company_related_company_id_index
    on public.company_related_company (related_company_id);


-- Product_related_product
create table public.product_related_product
(
    id  bigint generated by default as identity
        constraint product_related_product_pk
        primary key,
    rank  integer not null
          constraint product_related_product_rank_check
          check (rank >= 0),
    product_id  bigint not null
                constraint product_related_product_product_id_fk_product_id
                references public.product
                deferrable initially deferred,
    related_product_id  bigint  not null
                        constraint product_related_product_related_product_id_fk_product_id
                        references public.product
                        deferrable initially deferred,
    constraint unique_product_related_product_rank
        unique (product_id, related_product_id, rank)
);

alter table public.product_related_product
    owner to postgres;

create index product_related_product_product_id_index
    on public.product_related_product (product_id);

create index product_related_product_related_product_id_index
    on public.product_related_product (related_product_id);


-- User_recommended_point schema
create table public.user_recommended_point
(
    id  bigint generated by default as identity
        constraint user_recommended_point_pk
        primary key,
    rank  integer not null
          constraint user_recommended_point_rank_check
          check (rank >= 0),
    recommended_point_id bigint  not null
                         constraint user_recommended_point_recommended_point_id_fk_point_id
                         references public.point
                         deferrable initially deferred,
    user_id  bigint  not null
             constraint user_recommended_point_user_id_fk_user_id
             references public.user_
             deferrable initially deferred,
    constraint user_id_recommended_point_id_rank_unique
        unique (user_id, recommended_point_id, rank)
);

alter table public.user_recommended_point
    owner to postgres;

create index user_recommended_point_recommended_point_id_index
    on public.user_recommended_point (recommended_point_id);

create index user_recommended_point_recommended_user_id_index
    on public.user_recommended_point (user_id);


-- User_recommended_product schema
create table public.user_recommended_product
(
    id  bigint generated by default as identity
        constraint user_recommended_product_pk
        primary key,
    rank  integer not null
          constraint user_recommended_product_rank_check
          check (rank >= 0),
    recommended_product_id bigint  not null
                         constraint user_recommended_product_recommended_product_id_fk_product_id
                         references public.product
                         deferrable initially deferred,
    user_id  bigint  not null
             constraint user_recommended_product_user_id_fk_user_id
             references public.user_
             deferrable initially deferred,
    constraint user_id_recommended_product_id_rank_unique
        unique (user_id, recommended_product_id, rank)
);

alter table public.user_recommended_product
    owner to postgres;

create index user_recommended_product_recommended_product_id_index
    on public.user_recommended_product (recommended_product_id);

create index user_recommended_product_recommended_user_id_index
    on public.user_recommended_product (user_id);


-- User_statistics schema
create table public.user_statistics
(
    id  bigint generated by default as identity
        constraint user_statistics_pk
        primary key,
    amount  integer not null
            constraint user_statistics_amount_check
            check (amount >= 0),
    money  numeric(10, 2) not null,
    point_id  bigint not null
              constraint user_statistics_point_id_fk_point_id
              references public.point
              deferrable initially deferred,
    product_id  bigint not null
                constraint user_statistics_product_id_fk_product_id
                references public.product
                deferrable initially deferred,
    user_id  bigint  not null
             constraint user_statistics_user_id_fk_user_id
             references public.user_
             deferrable initially deferred
);

alter table public.user_statistics
    owner to postgres;

create index user_statistics_point_id_index
    on public.user_statistics (point_id);

create index user_statistics_product_id_index
    on public.user_statistics (product_id);

create index user_statistics_user_id_index
    on public.user_statistics (user_id);


-- User_statistics schema
create table public.point_statistics
(
    id  bigint generated by default as identity
        constraint point_statistics_pk
        primary key,
    day_of_week     numeric(1)  not null,
    month_of_year   numeric(2)  not null,
    visitor_count   integer  not null
        constraint point_statistics_visitor_count_check
        check (visitor_count >= 0),
    morning_orders_amount  integer not null
        constraint point_statistics_morning_orders_amount_check
        check (morning_orders_amount >= 0),
    morning_money  numeric(10, 2) not null,
    afternoon_orders_amount integer not null
        constraint point_statistics_afternoon_orders_amount_check
        check (afternoon_orders_amount >= 0),
    afternoon_money numeric(10, 2) not null,
    evening_orders_amount  integer  not null
        constraint point_statistics_evening_orders_amount_check
        check (evening_orders_amount >= 0),
    evening_money  numeric(10, 2) not null,
    point_id  bigint not null
        constraint point_statistics_point_id_fk_point_id
        references public.point
        deferrable initially deferred,
    product_id  bigint not null
        constraint point_statistics_product_id_fk_product_id
        references public.product
        deferrable initially deferred
);

alter table public.point_statistics
    owner to postgres;

create index point_statistics_point_id_index
    on public.point_statistics (point_id);

create index point_statistics_product_id_index
    on public.point_statistics (product_id);


-- Change_product_recommendation schema
create table public.change_product_recommendation
(
    id  bigint generated by default as identity
        constraint change_product_recommendation_pk
        primary key,
    recommendation text not null,
    point_id  bigint not null
              constraint change_product_recommendation_point_id_fk_point_id
              references public.point
              deferrable initially deferred,
    product_id  bigint not null
                constraint change_product_recommendation_product_id_fk_product
                references public.product
                deferrable initially deferred
);

alter table public.change_product_recommendation
    owner to postgres;

create index change_product_recommendation_point_id_index
    on public.change_product_recommendation (point_id);

create index change_product_recommendation_product_id_index
    on public.change_product_recommendation (product_id);


-- Profit_evaluation schema
create table public.profit_evaluation
(
    id  bigint generated by default as identity
        constraint profit_evaluation_pk
        primary key,
    current_delta double precision not null,
    result_delta double precision not null,
    current_money numeric(10, 2) not null,
    result_money numeric(10, 2) not null,
    point_id  bigint not null
        constraint profit_evaluation_point_id_fk_point_id
            references public.point
            deferrable initially deferred
);

alter table public.profit_evaluation
    owner to postgres;

create index profit_evaluation_point_id_index
    on public.profit_evaluation (point_id);





-- Intermediate schemas for many-to-many cardinality


-- Point_brief_comments >--< Brief_comment schema
create table public.point_brief_comments_brief_comments
(
    id  bigint generated by default as identity
        constraint point_brief_comments_brief_comments_pk
        primary key,
    point_brief_comments_id bigint not null
                            constraint m2m_point_brief_comments_id_fk_point_brief_comments_id
                            references public.point_brief_comments
                            deferrable initially deferred,
    brief_comment_id  bigint not null
                      constraint m2m_brief_comment_id__fk_brief_comment_id
                      references public.brief_comment
                      deferrable initially deferred,
    constraint m2m_point_brief_comments_id_brief_comment_id_unique
        unique (point_brief_comments_id, brief_comment_id)
);

alter table public.point_brief_comments_brief_comments
    owner to postgres;

create index m2m_point_brief_comments_id_index
    on public.point_brief_comments_brief_comments (point_brief_comments_id);

create index m2m_brief_comment_id_index
    on public.point_brief_comments_brief_comments (brief_comment_id);


-- Auth_group >--< Auth_permission schema
create table public.auth_group_permissions
(
    id  bigint generated by default as identity
        constraint auth_group_permissions_pk
        primary key,
    group_id  integer not null
              constraint m2m_group_id_fk_auth_group_id
              references public.auth_group
              deferrable initially deferred,
    permission_id integer not null
        constraint m2m_permission_id_fk_auth_permission_id
            references public.auth_permission
            deferrable initially deferred,
    constraint m2m_group_id_permission_id_unique
        unique (group_id, permission_id)
);

alter table public.auth_group_permissions
    owner to postgres;

create index m2m_auth_group_permissions_group_id_index
    on public.auth_group_permissions (group_id);

create index m2m_auth_group_permissions_permission_id_index
    on public.auth_group_permissions (permission_id);


-- Auth_group >--< Auth_permission schema
create table public.user_groups
(
    id  bigint generated by default as identity
        constraint user_groups_pk
        primary key,
    user_id bigint not null
            constraint m2m_user_id_fk_user_id
            references public.user_
            deferrable initially deferred,
    group_id integer not null
             constraint m2m_group_id_fk_auth_group_id
             references public.auth_group
             deferrable initially deferred,
    constraint m2m_user_id_group_id_unique
        unique (user_id, group_id)
);

alter table public.user_groups
    owner to postgres;

create index m2m_user_groups_user_id_index
    on public.user_groups (user_id);

create index m2m_user_groups_group_id_index
    on public.user_groups (group_id);


-- User >--< User_permissions schema
create table public.user_user_groups
(
    id  bigint generated by default as identity
        constraint user_user_permissions_pk
        primary key,
    user_id bigint not null
            constraint m2m_user_id_fk_user_id
            references public.user_
            deferrable initially deferred,
    group_id   integer not null
               constraint m2m_group_id_fk_auth_group_id
               references public.auth_group
               deferrable initially deferred,
    constraint user_user_groups_user_id_group_id_unique
        unique (user_id, group_id)
);

alter table public.user_user_groups
    owner to postgres;

create index m2m_user_user_groups_user_id_index
    on public.user_user_groups (user_id);

create index m2m_user_user_groups_group_id_index
    on public.user_user_groups (group_id);
